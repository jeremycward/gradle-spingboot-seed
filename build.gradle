buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.4")
	}
}

sonarqube {
	properties {
		property "systemProp.sonar.host.url", "http://sonarqube:9000"
	}
}

group = 'sadhal'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: "org.sonarqube"

jar {
	baseName = 'gradle-seed'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	compile('org.mongodb:mongodb-driver:3.4.1')
	//compile('org.mongodb:mongodb-driver-async:3.4.1')
	testCompile('com.github.fakemongo:fongo:2.0.6')
}

docker {
	baseImage "frolvlad/alpine-oraclejdk8:slim"
	registry = '172.30.1.1:5000'
}

task buildDocker(type: Docker, dependsOn: build) {
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
	exposePort(8080)
	applicationName = jar.baseName
	addFile("../libs/" + jar.baseName + "-" + jar.version + ".jar", "app.jar")
	entryPoint( ["sh", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"] )
	push = true
	tag = "${docker.registry}/contacts-be-dev/gradle-spingboot-seed"
}

task buildDockerFromDockerfile(type: Docker, dependsOn: build) {
	push = false
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

/*
bootRun {
	environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "test-sadhal"
}
*/
